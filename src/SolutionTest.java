import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.Test;
import org.junit.platform.commons.annotation.Testable;

@Testable
public class SolutionTest {
    @Test
    public void test0(){
        int n = 5;
        int d = 2;
        int[] scores = {1,2,4,5,6};
        int expected = 2;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test1(){
        int n = 8;
        int d = 2;
        int[] scores = {5,2,11,6,9,7,12,4};
        int expected = 4;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test2(){
        int n = 5;
        int d = 1;
        int[] scores = {5,2,11,7,9};
        int expected = 5;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test3(){
        int n = 8;
        int d = 20;
        int[] scores = {5,2,11,6,9,7,12,4};
        int expected = 1;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test4(){
        int n = 10;
        int d = 2;
        int[] scores = {1, 6, 1, 5, 3, 4, 6, 8, 8, 8};
        int expected = 3;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test5(){
        int n = 200;
        int d = 10;
        int[] scores = {161, 158, 26, 187, 78, 164, 44, 143, 31, 12, 194, 134, 81, 0, 75, 199, 24, 104, 71, 145, 82, 64, 185, 62, 145, 67, 70, 90, 139, 92, 198, 34, 88, 51, 158, 135, 47, 124, 96, 73, 20, 35, 64, 144, 106, 76, 147, 54, 57, 71, 150, 17, 164, 80, 168, 116, 107, 68, 61, 189, 40, 88, 137, 137, 63, 180, 53, 148, 118, 37, 72, 117, 143, 16, 29, 29, 71, 153, 109, 128, 124, 171, 169, 148, 135, 35, 103, 14, 171, 149, 158, 173, 162, 168, 111, 166, 91, 53, 10, 166, 49, 162, 58, 86, 19, 198, 174, 152, 179, 157, 133, 64, 158, 130, 189, 70, 79, 116, 184, 144, 120, 65, 92, 101, 166, 48, 6, 100, 135, 147, 194, 138, 59, 129, 9, 50, 180, 81, 47, 86, 180, 146, 103, 132, 50, 80, 190, 149, 72, 48, 57, 175, 3, 45, 100, 105, 24, 131, 1, 190, 24, 89, 64, 195, 128, 196, 169, 163, 7, 174, 195, 3, 172, 157, 8, 191, 172, 103, 47, 2, 133, 179, 157, 197, 34, 131, 26, 159, 68, 167, 36, 34, 65, 11, 146, 150, 19, 0, 126, 143};
        int expected = 18;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test6(){
        int n = 200;
        int d = 19;
        int[] scores = {161, 158, 26, 187, 78, 164, 44, 143, 31, 12, 194, 134, 81, 0, 75, 199, 24, 104, 71, 145, 82, 64, 185, 62, 145, 67, 70, 90, 139, 92, 198, 34, 88, 51, 158, 135, 47, 124, 96, 73, 20, 35, 64, 144, 106, 76, 147, 54, 57, 71, 150, 17, 164, 80, 168, 116, 107, 68, 61, 189, 40, 88, 137, 137, 63, 180, 53, 148, 118, 37, 72, 117, 143, 16, 29, 29, 71, 153, 109, 128, 124, 171, 169, 148, 135, 35, 103, 14, 171, 149, 158, 173, 162, 168, 111, 166, 91, 53, 10, 166, 49, 162, 58, 86, 19, 198, 174, 152, 179, 157, 133, 64, 158, 130, 189, 70, 79, 116, 184, 144, 120, 65, 92, 101, 166, 48, 6, 100, 135, 147, 194, 138, 59, 129, 9, 50, 180, 81, 47, 86, 180, 146, 103, 132, 50, 80, 190, 149, 72, 48, 57, 175, 3, 45, 100, 105, 24, 131, 1, 190, 24, 89, 64, 195, 128, 196, 169, 163, 7, 174, 195, 3, 172, 157, 8, 191, 172, 103, 47, 2, 133, 179, 157, 197, 34, 131, 26, 159, 68, 167, 36, 34, 65, 11, 146, 150, 19, 0, 126, 143};
        int expected = 10;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test7(){
        int n = 400;
        int d = 4;
        int[] scores = {131, 57, 136, 141, 121, 170, 128, 89, 155, 51, 122, 177, 18, 188, 21, 77, 49, 42, 168, 148, 73, 164, 179, 95, 99, 187, 188, 196, 90, 199, 40, 170, 84, 107, 104, 67, 25, 111, 14, 177, 127, 172, 105, 184, 6, 196, 138, 86, 44, 26, 23, 195, 105, 29, 174, 53, 86, 114, 4, 184, 79, 51, 85, 78, 15, 112, 34, 84, 193, 117, 48, 63, 107, 124, 150, 60, 78, 154, 57, 81, 76, 13, 95, 5, 91, 176, 38, 96, 155, 192, 38, 93, 66, 185, 101, 178, 61, 12, 149, 87, 170, 20, 137, 37, 114, 136, 152, 115, 166, 69, 142, 33, 130, 49, 50, 81, 98, 188, 10, 175, 70, 116, 193, 116, 92, 38, 80, 190, 131, 137, 156, 133, 85, 83, 28, 21, 142, 152, 160, 160, 165, 30, 71, 84, 126, 147, 59, 152, 134, 12, 100, 19, 75, 79, 123, 162, 68, 113, 110, 100, 166, 111, 186, 118, 135, 24, 170, 89, 187, 44, 177, 63, 145, 7, 166, 143, 85, 36, 25, 15, 32, 154, 99, 178, 151, 60, 175, 66, 110, 119, 93, 170, 35, 91, 181, 14, 88, 73, 33, 85, 195, 176, 88, 66, 100, 4, 198, 1, 18, 39, 166, 97, 57, 122, 12, 60, 22, 72, 189, 12, 5, 96, 184, 143, 60, 31, 170, 4, 2, 171, 24, 88, 187, 73, 193, 126, 83, 41, 32, 162, 42, 114, 178, 97, 119, 84, 19, 30, 116, 115, 19, 50, 154, 121, 19, 195, 83, 50, 82, 160, 102, 194, 118, 51, 152, 171, 166, 57, 73, 8, 131, 54, 195, 129, 11, 25, 145, 19, 152, 198, 77, 51, 63, 142, 185, 153, 66, 117, 105, 98, 19, 130, 102, 74, 54, 192, 163, 1, 22, 88, 125, 164, 104, 49, 115, 119, 8, 71, 17, 46, 91, 84, 153, 103, 144, 97, 40, 25, 57, 106, 133, 106, 1, 59, 76, 41, 157, 189, 192, 168, 152, 66, 165, 82, 187, 42, 111, 195, 142, 57, 65, 122, 139, 199, 19, 5, 67, 4, 2, 129, 75, 141, 87, 128, 72, 65, 153, 41, 139, 145, 133, 78, 69, 183, 36, 71, 120, 54, 124, 55, 36, 138, 88, 5, 68, 58, 189, 76, 163, 81, 108, 78, 69, 180, 20, 55, 65, 6, 190, 53, 187, 16, 67, 81, 131, 34, 59, 189, 13, 114};
        int expected = 39;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test8(){
        int n = 400;
        int d = 14;
        int[] scores = {131, 57, 136, 141, 121, 170, 128, 89, 155, 51, 122, 177, 18, 188, 21, 77, 49, 42, 168, 148, 73, 164, 179, 95, 99, 187, 188, 196, 90, 199, 40, 170, 84, 107, 104, 67, 25, 111, 14, 177, 127, 172, 105, 184, 6, 196, 138, 86, 44, 26, 23, 195, 105, 29, 174, 53, 86, 114, 4, 184, 79, 51, 85, 78, 15, 112, 34, 84, 193, 117, 48, 63, 107, 124, 150, 60, 78, 154, 57, 81, 76, 13, 95, 5, 91, 176, 38, 96, 155, 192, 38, 93, 66, 185, 101, 178, 61, 12, 149, 87, 170, 20, 137, 37, 114, 136, 152, 115, 166, 69, 142, 33, 130, 49, 50, 81, 98, 188, 10, 175, 70, 116, 193, 116, 92, 38, 80, 190, 131, 137, 156, 133, 85, 83, 28, 21, 142, 152, 160, 160, 165, 30, 71, 84, 126, 147, 59, 152, 134, 12, 100, 19, 75, 79, 123, 162, 68, 113, 110, 100, 166, 111, 186, 118, 135, 24, 170, 89, 187, 44, 177, 63, 145, 7, 166, 143, 85, 36, 25, 15, 32, 154, 99, 178, 151, 60, 175, 66, 110, 119, 93, 170, 35, 91, 181, 14, 88, 73, 33, 85, 195, 176, 88, 66, 100, 4, 198, 1, 18, 39, 166, 97, 57, 122, 12, 60, 22, 72, 189, 12, 5, 96, 184, 143, 60, 31, 170, 4, 2, 171, 24, 88, 187, 73, 193, 126, 83, 41, 32, 162, 42, 114, 178, 97, 119, 84, 19, 30, 116, 115, 19, 50, 154, 121, 19, 195, 83, 50, 82, 160, 102, 194, 118, 51, 152, 171, 166, 57, 73, 8, 131, 54, 195, 129, 11, 25, 145, 19, 152, 198, 77, 51, 63, 142, 185, 153, 66, 117, 105, 98, 19, 130, 102, 74, 54, 192, 163, 1, 22, 88, 125, 164, 104, 49, 115, 119, 8, 71, 17, 46, 91, 84, 153, 103, 144, 97, 40, 25, 57, 106, 133, 106, 1, 59, 76, 41, 157, 189, 192, 168, 152, 66, 165, 82, 187, 42, 111, 195, 142, 57, 65, 122, 139, 199, 19, 5, 67, 4, 2, 129, 75, 141, 87, 128, 72, 65, 153, 41, 139, 145, 133, 78, 69, 183, 36, 71, 120, 54, 124, 55, 36, 138, 88, 5, 68, 58, 189, 76, 163, 81, 108, 78, 69, 180, 20, 55, 65, 6, 190, 53, 187, 16, 67, 81, 131, 34, 59, 189, 13, 114};
        int expected = 14;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
    @Test
    public void test9(){
        int n = 1000;
        int d = 50;
        int[] scores = {197, 156, 494, 168, 288, 635, 76, 13, 10, 102, 296, 417, 519, 223, 151, 692, 347, 689, 533, 819, 447, 227, 251, 276, 20, 297, 671, 546, 684, 930, 266, 990, 691, 588, 65, 116, 992, 157, 469, 948, 90, 421, 609, 630, 371, 804, 784, 574, 845, 283, 148, 440, 106, 2, 462, 954, 539, 12, 386, 979, 498, 766, 990, 784, 205, 300, 377, 786, 930, 47, 990, 973, 240, 124, 344, 245, 833, 950, 837, 100, 250, 740, 216, 458, 594, 111, 884, 735, 23, 826, 243, 572, 284, 479, 425, 347, 214, 667, 186, 910, 118, 450, 390, 503, 497, 688, 768, 151, 846, 20, 826, 614, 321, 139, 409, 890, 235, 955, 448, 316, 819, 86, 427, 975, 136, 907, 504, 412, 262, 93, 269, 669, 430, 507, 350, 758, 510, 906, 597, 960, 33, 162, 643, 3, 944, 582, 634, 123, 862, 136, 354, 228, 432, 655, 171, 789, 181, 455, 247, 465, 803, 277, 235, 989, 74, 553, 482, 990, 987, 149, 589, 272, 740, 422, 427, 87, 878, 909, 602, 813, 425, 390, 124, 99, 259, 918, 260, 942, 456, 523, 205, 351, 387, 162, 783, 94, 656, 77, 797, 812, 599, 735, 274, 859, 810, 262, 942, 104, 902, 731, 679, 318, 348, 299, 283, 599, 63, 387, 290, 877, 382, 906, 330, 912, 843, 455, 132, 809, 708, 211, 564, 231, 307, 774, 207, 740, 562, 697, 927, 313, 184, 499, 153, 561, 866, 998, 470, 980, 767, 940, 809, 755, 785, 756, 543, 162, 635, 705, 888, 281, 680, 260, 621, 957, 845, 388, 99, 696, 957, 813, 653, 95, 68, 284, 800, 678, 363, 967, 363, 119, 334, 932, 990, 330, 135, 501, 14, 898, 165, 793, 563, 735, 961, 37, 687, 358, 343, 430, 567, 669, 401, 818, 443, 360, 896, 167, 415, 101, 703, 512, 718, 585, 206, 363, 102, 743, 731, 339, 821, 642, 228, 261, 491, 484, 803, 932, 120, 383, 122, 295, 236, 493, 872, 724, 998, 576, 856, 353, 378, 753, 150, 450, 509, 939, 115, 785, 627, 791, 840, 817, 925, 346, 883, 85, 680, 855, 264, 694, 482, 90, 898, 917, 9, 62, 260, 706, 684, 239, 718, 210, 438, 795, 982, 118, 618, 486, 902, 141, 35, 405, 207, 450, 234, 218, 880, 665, 95, 86, 784, 500, 472, 87, 312, 467, 108, 668, 582, 381, 26, 570, 294, 109, 138, 161, 542, 545, 900, 537, 132, 306, 656, 632, 479, 98, 103, 284, 94, 880, 837, 543, 30, 279, 86, 921, 693, 491, 594, 665, 729, 778, 889, 174, 77, 642, 591, 850, 270, 918, 686, 984, 993, 298, 36, 386, 215, 530, 100, 778, 326, 331, 209, 197, 983, 626, 214, 691, 923, 610, 652, 450, 774, 634, 748, 821, 775, 546, 451, 133, 473, 157, 773, 374, 576, 41, 972, 111, 36, 56, 467, 998, 31, 927, 88, 39, 568, 421, 568, 917, 773, 829, 767, 143, 968, 965, 34, 473, 413, 524, 253, 486, 89, 115, 267, 755, 858, 808, 479, 95, 238, 479, 701, 545, 962, 696, 769, 682, 509, 742, 282, 768, 55, 248, 96, 652, 581, 257, 442, 398, 469, 474, 949, 601, 836, 802, 818, 135, 627, 367, 403, 991, 843, 828, 583, 344, 276, 342, 835, 528, 755, 743, 94, 541, 998, 64, 175, 407, 578, 50, 64, 720, 628, 393, 948, 426, 299, 672, 984, 703, 129, 313, 985, 224, 660, 535, 285, 143, 460, 300, 757, 523, 405, 981, 279, 461, 393, 326, 695, 38, 842, 451, 704, 598, 532, 211, 338, 970, 204, 583, 214, 720, 384, 334, 92, 74, 376, 994, 214, 414, 848, 994, 977, 211, 51, 887, 957, 806, 562, 949, 834, 28, 98, 893, 213, 849, 731, 151, 651, 436, 923, 173, 728, 964, 895, 204, 628, 811, 77, 557, 686, 269, 366, 582, 568, 510, 194, 923, 757, 320, 231, 727, 867, 731, 817, 381, 699, 345, 743, 773, 218, 403, 760, 740, 909, 589, 901, 377, 661, 164, 509, 471, 589, 210, 48, 608, 78, 614, 806, 611, 978, 188, 84, 823, 315, 359, 801, 134, 316, 847, 801, 944, 30, 325, 299, 962, 490, 536, 918, 666, 159, 7, 361, 112, 857, 649, 32, 450, 116, 815, 108, 139, 974, 95, 668, 920, 608, 637, 929, 443, 553, 52, 522, 367, 537, 398, 975, 704, 896, 81, 769, 769, 245, 246, 825, 22, 859, 356, 57, 784, 978, 138, 899, 769, 897, 814, 931, 5, 956, 843, 114, 767, 604, 195, 554, 285, 797, 402, 694, 653, 246, 784, 65, 598, 704, 361, 768, 263, 254, 385, 736, 595, 562, 604, 273, 607, 804, 560, 15, 678, 790, 644, 865, 320, 547, 341, 168, 502, 649, 403, 712, 38, 440, 559, 909, 15, 691, 253, 929, 233, 750, 851, 713, 175, 909, 733, 432, 579, 973, 339, 953, 237, 718, 651, 208, 491, 511, 50, 513, 292, 593, 250, 666, 341, 151, 877, 601, 971, 371, 201, 80, 427, 842, 549, 99, 977, 59, 405, 894, 894, 862, 913, 763, 554, 97, 715, 935, 606, 437, 428, 547, 995, 529, 775, 3, 943, 808, 245, 265, 493, 546, 997, 982, 499, 938, 298, 157, 717, 766, 246, 558, 716, 743, 769, 874, 170, 41, 375, 621, 362, 135, 763, 214, 13, 730, 412, 320, 744, 89, 498, 240, 992, 436, 440, 37, 397, 42, 292, 718, 785, 278, 639, 921, 783, 211, 524, 349, 493, 401, 828, 965, 629, 408, 476, 980, 573, 469, 606, 210, 159, 19, 969, 926, 221, 190, 466, 815, 957, 755, 573, 989, 601, 263, 143, 112, 499, 972, 382, 954, 437, 584, 405, 648, 342, 685, 992, 762, 621, 245, 964, 175, 793, 795, 34, 821, 948, 713, 745, 159, 406, 335, 115, 662, 996, 636, 357, 597, 805, 527, 998, 201, 664, 620, 738, 892, 29, 353, 470, 692, 511, 535, 600, 598, 818, 951, 243, 896, 851, 165, 105, 636, 958, 948, 701, 566, 141, 139, 518, 392, 591, 931, 668};
        int expected = 20;
        int actual = Solution.numOfGroups(n, d, scores);
        assertEquals(expected, actual);
    }
}
